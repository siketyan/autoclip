name: Rust

on:
  - push

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        platform:
          - windows-latest
          - macos-latest
          - ubuntu-latest

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-v4

      - name: Install platform-specific dependencies
        if: ${{ runner.os == 'Linux' }}
        run: sudo apt-get install xorg-dev libxcb-shape0-dev libxcb-xfixes0-dev

      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt,clippy

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --verbose --release

      - name: Run clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose

      - uses: actions/upload-artifact@v2
        with:
          name: 'plugins-${{ matrix.platform }}'
          path: |
            ./target/release/*.dll
            ./target/release/*.dylib
            ./target/release/*.so

  publish:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v2
        with:
          ref: gh-pages
          path: ./public/

      - uses: actions/download-artifact@v2
        with:
          path: ./artifacts/

      - name: Copy plugins
        shell: bash
        run: |
          shopt -s globstar
          cp ./artifacts/**/{*.dll,*.dylib,*.so} ./public/

      - name: Setup Git
        run: |
          git config --global user.name "${{ github.event.pusher.name }}"
          git config --global user.email "${{ github.event.pusher.email }}"

      - name: Commit & Push
        working-directory: ./public/
        run: |
          git add .
          git commit -m "ðŸš€ Publish ${{ github.sha }}"
          git push origin gh-pages
